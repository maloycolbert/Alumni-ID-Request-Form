// GRID uses grid layout w/ float fallback
$emSize: 14;
$gridWidth:1240/$emSize;
$gridGutter:48/$emSize;
$gridMobileGutter:28/$emSize;
$gridColNum:12;

.row {
    max-width: $gridWidth+em;
    width: 100%;
    display: grid;
grid-template-columns: repeat(#{$gridColNum}, 1fr);
grid-gap: $gridGutter+em;
    position:relative;
}

.row:after{
    content:'';
    display:block;
    clear:both;
}
.row.forceBottomGap:after{
    grid-column: span 12;
}

.col {
    box-sizing: border-box;
padding-right: $gridGutter+em;
word-wrap: break-word;
    overflow-wrap: break-word;
min-height: 50px;
}

.col img {
    max-width: 100%;
}

img {
    height: auto;
}

em {
    font-style: italic;
}

.col:last-of-type {
    // padding-right: 0;
}

@for $i from 1 through $gridColNum{
    .col--#{$i} {
        grid-column: span $i;
        float:left;
        width: ($gridWidth/$gridColNum)*$i+em;
    }
}

@media (max-width: 1024px) {
    .col {
    padding-right: $gridMobileGutter;
    }
}

@media(max-width: 680px) {
    .col{
        width: 100% !important;
        grid-column: span #{$gridColNum} !important;
    }
}

@media (max-width: 550px) {
    img {
        width: 100%;
    }

    .row {
        grid-template-columns: repeat(1, 1fr);
        width: 100%;
    }

    .col {
        padding:0;
        width: 100%;
        //margin-bottom: 40px;
    }
}

.row--2{
    grid-row: 2;
}

@media (max-width: 800px) {
    .row{
        grid-template-columns: repeat(6, 1fr);
    }

    @for $i from 1 through $gridColNum {
        .col--#{$i} {
            grid-column: span $i/2;
            float:left;
            width: percentage((($gridWidth/$gridColNum)/$gridWidth)*($i/2));
        }
    }
}

// Clear margins if grid is supported
@supports (grid-area: auto) {
    .col {
        padding:0;
        float:none;
        width: auto;
    }
    @media (max-width: 1024px) {
        .row {
        grid-gap: $gridMobileGutter+em;
        }
    }
}

.row--noGap{
    padding-left: 0;
    grid-gap: 0;
}